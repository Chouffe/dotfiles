import Control.Applicative
import Control.Monad
import Control.Concurrent

import Data.String
import Data.Char
import Data.List
import Data.Monoid

:set prompt "Î»> "
:set editor nvim

let ghciEscapeShellArg arg = "'" ++ concatMap (\c -> if c == '\'' then "'\"'\"'" else [c]) arg ++ "'"

:def! hlint const . return $ ":! hlint \"src\""
:def! pl \s -> return $ ":! pointfree \"" ++ s ++ "\""

:def! hoogle \s -> return $ ":! hoogle --count=15 \"" ++ s ++ "\""
:def! search return . (":! hoogle --color --count=15 " ++) . ghciEscapeShellArg
:def! doc return . (":! hoogle --info " ++) . ghciEscapeShellArg

:set +t

:m + Data.List
:m + Control.Arrow
:m + Control.Applicative
:m + Control.Monad
:m + Data.Maybe
:m + Data.Monoid
:m + Text.Printf

:set -Wall
