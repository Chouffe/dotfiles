# UTF-8
set -g utf8
set-window-option -g utf8 on
set -g status-utf8 on

# Mouse
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Config Reload
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded."

# set-option -g prefix C-a
# bind-key a send-prefix
unbind-key C-b
set -g prefix C-Space
bind-key Space send-prefix

# allow 256 colors in terminal
# set -g default-terminal "screen-256color"
# set -g default-terminal "screen"
set -g default-terminal "screen-256color"

# allow mouse scrolling in copy mode and also also focus pane when mouse hover with swipe
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Splits
bind-key | split-window -h
bind-key - split-window -v

bind-key v split-window -h
bind-key C-v split-window -h

bind-key l split-window -h
bind-key C-l split-window -h

bind-key s split-window -v
bind-key C-s split-window -v

bind-key j split-window -v
bind-key C-j split-window -v

# Window kills
bind-key q kill-window
bind-key C-q kill-window

# Pane kills
bind-key x kill-pane
bind-key C-x kill-pane

set-option -g status-utf8 on
set -g status-bg black
set -g status-fg green
set -g status-left-length 15
set -g status-left ' #[fg=cyan,bright]#10H#[fg=green]:#[fg=white]#S#[fg=green] | #[default]'
set -g status-right '| #[fg=yellow]%y-%m-%d %H:%M '
set -g status-justify centre

set -g history-limit 100000
bind-key r source-file ~/.tmux.conf
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# Moves
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key N previous-window
# # Smart pane switching with awareness of vim splits

# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# v and y like vi in copy-mode
setw -g mode-keys vi
set -g status-keys vi
bind-key -t vi-edit Up  history-up
bind-key -t vi-edit Down  history-down
unbind-key [
unbind-key ]
unbind-key p
bind-key p paste-buffer
bind-key Space copy-mode
bind-key -t vi-copy 'v' begin-selection
# Copy into the clipboard as well
bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'

unbind -n Tab
bind C-l send-keys 'C-l'
